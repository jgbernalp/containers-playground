version: "3.9"

networks:
  inner:

services:
  # prometheus:
  #   image: quay.io/prometheus/prometheus
  #   ports:
  #     - 9090:9090
  #   volumes:
  #     - ./prometheus.yml:/etc/prometheus/prometheus.yml
  #     - ./prometheus_rules.yml:/etc/prometheus/prometheus_rules.yml
  #     - ./alerting_rules.yml:/etc/prometheus/alerting_rules.yml
  #   command:
  #     - "--config.file=/etc/prometheus/prometheus.yml"
  #     - "--web.enable-lifecycle"
  #   networks:
  #     - inner

  # alert-manager:
  #   image: quay.io/prometheus/alertmanager
  #   ports:
  #     - "9093:9093"
  #   volumes:
  #     - ./alertmanager.yml:/etc/alert-manager/alertmanager.yml
  #   command:
  #     - "--config.file=/etc/alert-manager/alertmanager.yml"
  #   networks:
  #     - inner

  node-exporter:
    image: quay.io/prometheus/node-exporter
    ports:
      - 9100:9100
    networks:
      - inner

  # thanos:
  #   image: docker pull thanosio/thanos
  #   ports:
  #     - "9100:9100"
  #   command:
  #     - "--config.file=/etc/prometheus/prometheus.yml"
  #     - "--web.enable-lifecycle"
  # networks:
  #   - inner

  loki:
    image: grafana/loki:2.8.0
    ports:
      - 3200:3100
    restart: unless-stopped
    volumes:
      - ./loki/loki-config.yml:/etc/loki/local-config.yml
      - ./docker-compose-logs:/var/log
      - ./loki/rules:/loki/rules
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - inner

  promtail:
    image: grafana/promtail:2.5.0
    volumes:
      - ./docker-compose-logs:/var/log
      - ./loki/promtail-config.yml:/etc/promtail/config.yml
    command: -config.file=/etc/promtail/config.yml
    restart: unless-stopped
    networks:
      - inner

  log-generator:
    image: quay.io/rojacob/cluster-logging-load-client:0.0.1-db25b80
    restart: unless-stopped
    volumes:
      - ./docker-compose-logs:/var/log
    command: generate --output-format=csv --destination=file --file=/var/log/generated.log
    networks:
      - inner

  loki-proxy:
    image: nginx:alpine
    ports:
      - 3100:80
    volumes:
      - ./proxy.conf:/etc/nginx/templates/default.conf.template
    restart: unless-stopped
    networks:
      - inner

  grafana:
    image: grafana/grafana-oss:latest
    restart: unless-stopped
    volumes:
      - ./grafana:/var/lib/grafana
      - ./docker-compose-logs:/var/log
    ports:
      - 3000:3000
    networks:
      - inner
    logging:
      driver: none
